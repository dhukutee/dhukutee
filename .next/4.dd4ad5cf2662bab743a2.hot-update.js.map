{"version":3,"file":"4.dd4ad5cf2662bab743a2.hot-update.js","sources":["webpack:///helpers/customReplace.js","webpack:///helpers/firebase.js","webpack:///pages/blogs.js"],"sourcesContent":["import { getValueAt } from './firebase'\nconst stringReplaceAsync = require('string-replace-async')\n\n// reg ex pattern variables\nconst startReg = '!@#'\nconst endReg = '#@!'\n\nexport async function customReplace (stringData) {\n  // replacing !@#SOMETHING#@! to data provided from firebase database\n  return await stringReplaceAsync(\n    stringData,\n    RegExp(`${startReg}.*?${endReg}`, 'g'),\n    getDataFromFirebase\n  )\n}\n\nasync function getDataFromFirebase (data, something) {\n  const pathToDatabase = data.replace(startReg, '').replace(endReg, '')\n  // to prevent invalid database url to be invoken or shown in the orginal blog\n  if (/.*[$\\.#\\[\\]].*/.test(pathToDatabase)) {\n    return '<b>Invalid Path Given</b>'\n  }\n  // fetching result from firebase using parsed path\n  return await getValueAt(pathToDatabase)\n}\n\n\n\n// WEBPACK FOOTER //\n// helpers/customReplace.js","var firebase = require('firebase')\n\n// firbase config object\nvar config = {\n  apiKey: 'AIzaSyC1kIcWFwmYyx5341_mdiw4gpxGBTVWtus',\n  authDomain: 'dhukutee.firebaseapp.com',\n  databaseURL: 'https://dhukutee.firebaseio.com',\n  projectId: 'dhukutee',\n  storageBucket: 'dhukutee.appspot.com',\n  messagingSenderId: '142116528194'\n}\n\n// preventing multiple intilization attempts on server\n// we might have to shift to admin SDK\nif (!firebase.apps.length) {\n  firebase.initializeApp(config)\n}\n\n// add a blog detail from the firebase database\nexport function addABlog (blog) {\n  firebase.database().ref('blogs/' + blog.url).set(blog)\n}\n\n// gets the blog detail from the firebase database with provided slug\nexport function getABlog (slug) {\n  return firebase\n    .database()\n    .ref('blogs/' + slug)\n    .once('value')\n    .then(function (snapshot) {\n      return snapshot.val()\n    })\n}\n\n// returns the value of the provided path from firebase database\nexport async function getValueAt (path) {\n  const snapshot = await firebase.database().ref(path).once('value')\n  return snapshot.val()\n}\n\n\n\n// WEBPACK FOOTER //\n// helpers/firebase.js","import { getABlog } from '../helpers/firebase'\nimport ArticleFull from '../components/ArticleFull'\nimport { customReplace } from '../helpers/customReplace'\n\nconst Blog = props => {\n  return (\n    <div>\n      <ArticleFull blog={props.blog} />\n    </div>\n  )\n}\n\nBlog.getInitialProps = async ({ query }) => {\n  console.log(query)\n\n  const blog = await getABlog(query.slug)\n  blog.message = await customReplace(blog.message)\n  return { blog }\n}\n\nexport default Blog\n\n\n\n// WEBPACK FOOTER //\n// pages/blogs.js"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;;;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AASA;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAXA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;;;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AAJA;AAKA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAOA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}